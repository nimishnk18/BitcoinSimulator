<script type="text/javascript" src="<%= Routes.static_path(@conn, "/js/socket.js") %>"></script>
<section class="phx-hero">
  <h1>Below are the metrics for the bitcoin network simulation</h1>
</section>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.js"></script>
<script>
  function renderTxChart() {
    var ctx = document.getElementById("txChart").getContext('2d');
    return new Chart(ctx, {
      type: 'line',
      data: {
        labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"],
        datasets: [{
          label: 'Rate',
          data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          backgroundColor: 'rgba(250, 175, 50, 0.2)',
          borderColor: 'rgba(250, 175, 50, 1)',
          borderWidth: 1
        }]
      },
      options: {
        title: {
          display: true,
          fontSize: 25,
          text: "Transaction"
        },
        scales: {
          xAxes: [{
            gridLines: {
              display: false
            }
          }],
          yAxes: [{
            scaleLabel: {
              display: true,
              labelString: "Total Transactions in last 1 Min"
            },
            ticks: {
              beginAtZero: true
            }
          }]
        }
      }
    });
  }

  function renderMiningChart() {
    var ctx = document.getElementById("miningChart").getContext('2d');
    return new Chart(ctx, {
      type: 'line',
      data: {
        labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"],
        datasets: [{
            label: 'Rate',
            data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            backgroundColor: 'rgba(80, 220, 100, 0.2)',
            borderColor: 'rgba(80, 220, 100, 1)',
            borderWidth: 1
          }
        ]
      },
      options: {
        title: {
          display: true,
          fontSize: 25,
          text: "Mining"
        },
        scales: {
          xAxes: [{
            gridLines: {
              display: false
            }
          }],
          yAxes: [{
            scaleLabel: {
              display: true,
              labelString: "Total Blocks created in last 1 Min"
            },
            ticks: {
              beginAtZero: true
            }
          }]
        }
      }
    });
  }


  function renderCoinsTransacted() {
    var ctx = document.getElementById("coins_transacted").getContext('2d');
    return new Chart(ctx, {
      type: 'line',
      data: {
        labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"],
        datasets: [{
          label: 'Rate',
          data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          backgroundColor: 'rgba(90, 135, 50, 0.2)',
          borderColor: 'rgba(90, 135, 50, 1)',
          borderWidth: 1
        }]
      },
      options: {
        title: {
          display: true,
          fontSize: 25,
          text: "Coins Transacted"
        },
        scales: {
          xAxes: [{
            gridLines: {
              display: false
            }
          }],
          yAxes: [{
            scaleLabel: {
              display: true,
              labelString: "Total Coins transacted in last 1 Min"
            },
            ticks: {
              beginAtZero: true
            }
          }]
        }
      }
    });
  }

</script>

<div class="row">
  <div class="col-sm-12 col-md-12 col-lg-6 col-md-offset-2">
    <div class="graph-container">
      <canvas id="txChart" width="300" height="300"></canvas>
    </div>
  </div>

  <div class="col-sm-12 col-md-12 col-md-offset-2 col-lg-6">
    <div class="graph-container">
      <canvas id="miningChart" width="300" height="300"></canvas>
    </div>
  </div>
</div>

<div class="row">
  <div class="col-sm-12 col-md-12 col-lg-6">
    <div class="graph-container">
      <canvas id="coins_transacted" width="300" height="300"></canvas>
    </div>
  </div>

  <div class="col-sm-12 col-md-12 col-lg-6">
    <div class="graph-container">
      <canvas id="coins_mined" width="300" height="300"></canvas>
    </div>
  </div>
</div>




<script>
  tx_chart = renderTxChart();
  mine_chart = renderMiningChart();
  coins_transacted_chart = renderCoinsTransacted();
</script>

